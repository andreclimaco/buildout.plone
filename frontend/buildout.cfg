[buildout]

extends = settings.cfg

parts =
    haproxy-build
    haproxy-conf
    varnish-config
    varnish-build
    varnishd
    nginx
    nginx-build
    cmd-createdirs
    supervisor

[haproxy-build]
recipe = plone.recipe.haproxy
url = http://dist.plone.org/thirdparty/haproxy-1.4.8.zip
target = linux26


[haproxy-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/templates/haproxy.conf.in
output = ${buildout:directory}/etc/haproxy.conf
maxconn = 24000
ulimit-n = 65536
user = ${users:os}
group = ${users:os}
bind = ${hosts:haproxy}:${ports:haproxy}
auth-backends =
    ${haproxy-auth-backends:backends}
anon-backends =
    ${haproxy-anon-backends:backends}

[varnish-build]
recipe = zc.recipe.cmmi
#url = ${varnishd:download-url}
url = http://repo.varnish-cache.org/source/varnish-3.0.3.tar.gz

[varnish-config]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/templates/varnish.vcl.in
output = ${buildout:directory}/etc/varnish/varnish.vcl
backend-host = 127.0.0.1
backend-port = ${ports:haproxy}
purge-hosts =
    ${varnish-purge-hosts:hosts}

[varnishd]
recipe = plone.recipe.varnish
daemon = ${buildout:parts-directory}/varnish-build/sbin/varnishd
mode = foreground
config = ${varnish-config:output}
effective-user = ${users:os}
bind = 127.0.0.1:${ports:varnish}
cache-type = malloc
cache-size = 96M
telnet = ${ports:varnish-adm}

[nginx-build]
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-1.0.11.tar.gz

[nginx]
recipe = gocept.nginx
nginx = nginx-build
configuration = 
    error_log ${buildout:directory}/var/log/nginx-error.log warn;
    user ${users:os};
    worker_processes 6;
    worker_cpu_affinity 000001 000010 000100 001000 010000 100000;
    daemon off; 
    events {
        worker_connections 8192;
        use epoll;
    }
    http {
        access_log ${buildout:directory}/parts/nginx/nginx-access.log;
        default_type  application/octet-stream;
        client_max_body_size	100m;
        upstream varnish {
            server 127.0.0.1:${ports:varnish};
        }
        sendfile           on;
        tcp_nopush         on;
        keepalive_timeout  65;
        # Forcing aggressive gzip
        gzip              on;
        gzip_buffers      16 8k;
        gzip_comp_level   9;
        gzip_http_version 1.0;
        gzip_proxied any;
        gzip_min_length   1000;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon image/bmp image/png image/gif image/jpg image/jpeg;
        gzip_vary         on;
        gzip_disable     "MSIE [1-6]\.(?!.*SV1)";
        # Giving more information about proxy connections and gzip
        log_format main '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '"$gzip_ratio" "$http_host" $upstream_response_time';
        include ${buildout:directory}/parts/nginx-build/conf/mime.types;
        include ${buildout:directory}/etc/vhosts/*.conf;
    }

# ----------------- Create dirs -----------------
[cmd-createdirs]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    echo "Criando estrutura de diretÃ³rios"
    mkdir -p ${buildout:directory}/var
    chown root:root ${buildout:directory}/parts/nginx/sbin/nginx
    chmod 6555 ${buildout:directory}/parts/nginx/sbin/nginx

[supervisor]
recipe = collective.recipe.supervisor
plugins =
    supervisor>2.1
    superlance
port = ${ports:supervisor}
user = ${supervisor-settings:user}
password = ${supervisor-settings:password}
serverurl = http://${hosts:supervisor}:${ports:supervisor}
programs =
    10 haproxy  (autostart=true  startsecs=35)  ${buildout:directory}/bin/haproxy [ -f ${buildout:directory}/etc/haproxy.conf -db ]${users:os}
    20 varnish  ${buildout:directory}/bin/varnishd true
    30 nginx    ${nginx-build:location}/sbin/nginx [-c ${nginx:run-directory}/nginx.conf] true
logfile = ${buildout:directory}/var/log/supervisord.log
logfile_maxbytes = 5MB
logfile_backups = 10
loglevel = info
pidfile = ${buildout:directory}/var/supervisord.pid
nodaemon = false

